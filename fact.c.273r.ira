
;; Function main (main, funcdef_no=0, decl_uid=2248, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r97,l0) best DREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 54(l0): point = 4
   Insn 51(l0): point = 6
   Insn 48(l0): point = 9
   Insn 47(l0): point = 11
   Insn 46(l0): point = 13
   Insn 45(l0): point = 15
   Insn 44(l0): point = 17
   Insn 43(l0): point = 19
   Insn 42(l0): point = 21
   Insn 34(l0): point = 24
   Insn 33(l0): point = 26
   Insn 32(l0): point = 28
   Insn 31(l0): point = 30
   Insn 30(l0): point = 32
   Insn 29(l0): point = 34
   Insn 40(l0): point = 37
   Insn 39(l0): point = 39
   Insn 37(l0): point = 41
   Insn 63(l0): point = 44
   Insn 25(l0): point = 46
   Insn 61(l0): point = 49
   Insn 20(l0): point = 51
   Insn 19(l0): point = 53
   Insn 18(l0): point = 55
   Insn 16(l0): point = 58
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 13(l0): point = 64
   Insn 12(l0): point = 66
   Insn 11(l0): point = 68
   Insn 10(l0): point = 70
   Insn 9(l0): point = 72
   Insn 8(l0): point = 74
   Insn 7(l0): point = 76
   Insn 6(l0): point = 78
   Insn 5(l0): point = 80
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r90): [16..21]
 a3(r97): [18..19]
 a4(r89): [40..41]
 a5(r95): [27..28]
 a6(r88): [29..32]
 a7(r96): [29..30]
 a8(r94): [33..34]
 a9(r87): [61..62]
 a10(r93): [71..72]
Compressing live ranges: from 83 to 18 - 21%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r97): [4..5]
 a4(r89): [12..13]
 a5(r95): [6..7]
 a6(r88): [8..9]
 a7(r96): [8..9]
 a8(r94): [10..11]
 a9(r87): [14..15]
 a10(r93): [16..17]
  regions=1, blocks=9, points=18
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    9:r87  l0     0    6:r88  l0     0    4:r89  l0     0    2:r90  l0     0
    1:r91  l0     0    0:r92  l0     0   10:r93  l0     0    8:r94  l0     0
    5:r95  l0     0    7:r96  l0     1    3:r97  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,6u} r1={6d,1u} r2={5d} r4={7d,2u} r5={9d,4u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={9d,2u} r18={4d} r19={4d} r20={1d,21u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 409{335d,74u,0e} in 38{34 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 fact+0 S8 A64])
        (const_int 1 [0x1])) "fact.c":4 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8a927eef30 *.LC0>)) "fact.c":5 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "fact.c":5 84 {*movqi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8a92743f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "fact.c":5 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 93)) "fact.c":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8a9283d000 *.LC1>)) "fact.c":6 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "fact.c":6 84 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f8a92744b00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "fact.c":6 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 87 [ n.0_1 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 n+0 S4 A32])) "fact.c":9 82 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 87 [ n.0_1 ])
            (const_int 0 [0]))) "fact.c":9 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ n.0_1 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fact.c":9 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 23)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8a9283d090 *.LC2>)) "fact.c":10 81 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "fact.c":10 84 {*movqi_internal}
     (nil))
(call_insn 20 19 61 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8a92743f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "fact.c":10 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 61 20 62 3 (set (pc)
        (label_ref 49)) 659 {jump}
     (nil)
 -> 49)
(barrier 62 61 23)
(code_label 23 62 24 4 2 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 63 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "fact.c":12 82 {*movsi_internal}
     (nil))
(jump_insn 63 25 64 4 (set (pc)
        (label_ref 35)) "fact.c":12 659 {jump}
     (nil)
 -> 35)
(barrier 64 63 38)
(code_label 38 64 28 5 5 (nil) [1 uses])
(note 28 38 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "fact.c":13 82 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 88 [ _2 ])
        (sign_extend:DI (reg:SI 94))) "fact.c":13 145 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 31 30 32 5 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 fact+0 S8 A64])) "fact.c":13 81 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 95)
                (mult:DI (reg:DI 96)
                    (reg:DI 88 [ _2 ])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":13 339 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 33 32 34 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 fact+0 S8 A64])
        (reg:DI 95)) "fact.c":13 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 34 33 35 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fact.c":12 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 35 34 36 6 4 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 39 6 (set (reg:SI 89 [ n.1_3 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 n+0 S4 A32])) "fact.c":12 82 {*movsi_internal}
     (nil))
(insn 39 37 40 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 89 [ n.1_3 ]))) "fact.c":12 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ n.1_3 ])
        (nil)))
(jump_insn 40 39 41 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fact.c":12 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 38)
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:SI 90 [ n.2_4 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 n+0 S4 A32])) "fact.c":15 82 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 fact+0 S8 A64])) "fact.c":15 81 {*movdi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:DI 1 dx)
        (reg:DI 97)) "fact.c":15 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 45 44 46 7 (set (reg:SI 4 si)
        (reg:SI 90 [ n.2_4 ])) "fact.c":15 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ n.2_4 ])
        (nil)))
(insn 46 45 47 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f8a9283d120 *.LC3>)) "fact.c":15 81 {*movdi_internal}
     (nil))
(insn 47 46 48 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "fact.c":15 84 {*movqi_internal}
     (nil))
(call_insn 48 47 49 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8a92743f00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "fact.c":15 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 49 48 50 8 3 (nil) [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 54 8 (set (reg:SI 91 [ _17 ])
        (const_int 0 [0])) "fact.c":18 82 {*movsi_internal}
     (nil))
(insn 54 51 58 8 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _17 ])) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _17 ])
        (nil)))
(insn 58 54 59 8 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "fact.c":19 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 59 58 0 8 (use (reg/i:SI 0 ax)) "fact.c":19 -1
     (nil))
